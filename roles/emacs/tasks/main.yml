---
# file: roles/emacs/tasks/main.yml
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "{{ role_name }} | Link home doom"
  ansible.builtin.file:
    src: "{{ role_path }}/files/doom/"
    dest: "{{ ansible_user_dir }}/.config/doom"
    state: link
  register: result_doom_dir

- name: "{{ role_name }} | Download doom"
  ansible.builtin.git:
    repo: "https://github.com/doomemacs/doomemacs"
    depth: 1
    dest: "{{ ansible_user_dir }}/.config/emacs"
  register: result_download_doom

- name: "{{ role_name }} | Install doom"
  ansible.builtin.command: "{{ ansible_user_dir }}/.config/emacs/bin/doom --force install"
  when: result_doom_dir.changed

- name: "{{ role_name }} | Sync doom"
  ansible.builtin.command: "{{ ansible_user_dir }}/.config/emacs/bin/doom sync"
  when: result_doom_dir.changed or result_download_doom.changed

- name: "{{ role_name }} | Create desktop directory"
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/share/applications"
    state: directory

- name: "{{ role_name }} | Install org-protocol desktop file"
  ansible.builtin.template:
    src: "{{ role_path }}/templates/org-protocol.desktop.j2"
    dest: "{{ lookup('env', 'HOME') }}/.local/share/applications/org-protocol.desktop"
  register: result_org_protocol

- name: "{{ role_name }} | Refresh cache database of mime types handled by desktop files"
  ansible.builtin.command: update-desktop-database "{{ lookup('env', 'HOME') }}/.local/share/applications"
  when: result_org_protocol.changed

- name: "{{ role_name }} | Refresh org-protocol handler"
  ansible.builtin.command: xdg-mime default org-protocol.desktop x-scheme-handler/org-protocol
  when: result_org_protocol.changed

- name: "{{ role_name }} | ~./emacs and ~/.emacs.d not present"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ ansible_user_dir }}/.emacs"
    - "{{ ansible_user_dir }}/.emacs.d"

- name: "{{ role_name }} | link org directory"
  ansible.builtin.file:
    src: "{{ ansible_user_dir }}/Sync/{{ item }}"
    dest: "{{ ansible_user_dir}}/{{ item }}"
    force: yes
    state: link
  with_items:
    - org
    - org-roam

- name: "{{ role_name }} | Enable and start emacs server"
  ansible.builtin.systemd:
    name: emacs
    enabled: yes
    state: started
    scope: user
